<?php
/**
 *  Autoloader function generated by crodas/Autoloader
 *
 *  https://github.com/crodas/Autoloader
 *
 *  This is a generated file, do not modify it.
 */
@if ($stats)
$GLOBALS['call_{{$stats}}'] = 0;
$GLOBALS['load_{{$stats}}'] = 0;
@end

@set($function, 'autoloader_' . $hash)
@if ($relative)
@set($dir, '__DIR__' . $hash)
define({{@$dir}}, defined('__DIR__') ? __DIR__ : dirname(__FILE__));
@endif



function {{$function}}($class) {
    /*
        This array has a map of (class => file)
    */
    static $classes = {{ @$classes }};

    @if (count($deps) > 0)
    static $deps    = {{ @$deps}};
    @end

    @include("load")

    @if ($include_psr0)
    /**
     * Autoloader that implements the PSR-0 spec for interoperability between
     * PHP software.
     *
     * kudos to @alganet for this autoloader script.
     * borrowed from https://github.com/Respect/Validation/blob/develop/tests/bootstrap.php
     */
    $fileParts = explode('\\', ltrim($class, '\\'));
    if (false !== strpos(end($fileParts), '_')) {
        array_splice($fileParts, -1, 1, explode('_', current($fileParts)));
    }
    $file = stream_resolve_include_path(implode(DIRECTORY_SEPARATOR, $fileParts) . '.php');
    if ($file) {
        return require $file;
    }
    @end

    return false;
} 

spl_autoload_register({{@$function}}
@if (!$relative)
, true, true
@end
);

@foreach ($includes as $include)
    @if ($relative)
        require_once {{$dir}} . {{@$include}};
    @else
        require_once {{@$include}};
    @end
@end

@if ($stats)
function get{{$stats}}() {
    global $load_{{$stats}}, $call_{{$stats}};
    return array('loaded' => $load_{{$stats}}, 'calls' => $call_{{$stats}});
}
@end

<?php
/**
 *  Autoloader function generated by crodas/Autoloader
 *
 *  https://github.com/crodas/Autoloader
 *
 *  This is a generated file, do not modify it.
 */
#* include("common.tpl.php")

#* if ($stats)
$GLOBALS['call___stats__'] = 0;
$GLOBALS['load___stats__'] = 0;
#* end

spl_autoload_register(function ($class) {
    /*
        This array has a map of (class => file)
    */

    // classes {{{
    static $classes = __@classes__;
    // }}}

    #* if (count($deps) > 0)
    // deps {{{
    static $deps    = __@deps__;
    // }}}
    #* end

    $class = strtolower($class);
    if (isset($classes[$class])) {
        #* if ($stats) 
        $GLOBALS['call___stats__']++;
        #* end
        #* if (count($deps) > 0)
        if (!empty($deps[$class])) {
            foreach ($deps[$class] as $zclass) {
                #* validate('zclass')
            }
        }
        #* end

        #* validate('class')
        return true;
    }

    #* if ($include_psr0)
    /**
     * Autoloader that implements the PSR-0 spec for interoperability between
     * PHP software.
     *
     * kudos to @alganet for this autoloader script.
     * borrowed from https://github.com/Respect/Validation/blob/develop/tests/bootstrap.php
     */
    $fileParts = explode('\\', ltrim($class, '\\'));
    if (false !== strpos(end($fileParts), '_')) {
        array_splice($fileParts, -1, 1, explode('_', current($fileParts)));
    }
    $file = stream_resolve_include_path(implode(DIRECTORY_SEPARATOR, $fileParts) . '.php');
    if ($file) {
        return require $file;
    }
    #* end
    return false;
} #* if (!$relative)
, true, true #* end 
);


#* if ($stats)
function get__stats__() {
    global $load___stats__, $call___stats__;
    return array('loaded' => $load___stats__, 'calls' => $call___stats__);
}
#* end
